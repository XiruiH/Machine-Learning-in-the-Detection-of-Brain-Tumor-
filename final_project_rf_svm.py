# -*- coding: utf-8 -*-
"""Final Project RF/SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kYV2DiwbryT-p205ukK4Ys90qyi8Fuzn
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import os


from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn import svm

df = pd.read_csv("/content/drive/MyDrive/Python/BUDT704 final project/Brain Tumor.csv")
df.head()

from sklearn.metrics import accuracy_score
X = df.loc[:, ~df.columns.isin(['Image', 'Class','Entropy','Energy','Homogeneity','ASM'])]
y = df.loc[:,'Class']
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=45)
clf = RandomForestClassifier(n_estimators=1,max_features=1)
clf = clf.fit(X_train, y_train)
y_pred_test=clf.predict(X_test)
print(accuracy_score(y_test,y_pred_test))


from sklearn import svm
clf2 = svm.LinearSVC()
clf2.fit(X_train, y_train)
y_pred_test2=clf2.predict(X_test)
print(accuracy_score(y_test,y_pred_test2))

#try different feature to the model 
from sklearn.metrics import accuracy_score
#X = df.loc[:, ~df.columns.isin(['Image', 'Class','ASM','Contrast'])]
X = df.iloc[:,3:4]
y = df.loc[:,'Class']
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=45)
clf = RandomForestClassifier(n_estimators=1,max_features=1)
clf = clf.fit(X_train, y_train)
y_pred_test=clf.predict(X_test)
print(accuracy_score(y_test,y_pred_test))

"""During exploration, if the training dataset contains a single feature of ‘Energy’, ‘Entropy’, ‘ASM’ , or ‘Homogeneity’, a high accuracy score of over 90% can be achieved. By excluding these features, a relatively high score of nearly 90% can still be reached, although using individual features can only achieve a score not exceeding 60%. 

Comparing SVM model with random forest with same training data, random forest is better. The features used for training are not good for SVM model.
"""